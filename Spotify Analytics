# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1. Who are the top 10 artists based on popularity?
SELECT artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

#2. How many songs were in a major key?
SELECT COUNT(song_mode)
FROM BIT_DB.Spotifydata
WHERE song_mode = 1;

#3. What's the average danceability for the 10 most popular songs?
WITH top_popular AS
(SELECT danceability, popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10)

SELECT AVG(danceability) AS avg_danceability
FROM top_popular;

#4. Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, 
show their name, their average popularity, and label them as a “Top Star”.
WITH avg_popularity_CTE AS 
(SELECT artist_name, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY artist_name)

SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM avg_popularity_CTE
WHERE avg_popularity >= 90;
